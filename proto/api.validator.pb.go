// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package postgresServer

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Feature) Validate() error {
	for _, item := range this.FeatureVersion {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("FeatureVersion", err)
			}
		}
	}
	return nil
}
func (this *FeatureVersion) Validate() error {
	return nil
}
func (this *FeaturesRequest) Validate() error {
	return nil
}
func (this *FeaturesReply) Validate() error {
	for _, item := range this.Feature {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Feature", err)
			}
		}
	}
	return nil
}
func (this *FeatureRequest) Validate() error {
	return nil
}
func (this *FeatureReply) Validate() error {
	if this.Feature != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Feature); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Feature", err)
		}
	}
	return nil
}
func (this *ProjectInitializedRequest) Validate() error {
	return nil
}
func (this *ProjectInitializedReply) Validate() error {
	for _, item := range this.Projects {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Projects", err)
			}
		}
	}
	return nil
}
func (this *ProjectsRequest) Validate() error {
	return nil
}
func (this *ProjectFeature) Validate() error {
	return nil
}
func (this *ProjectFeaturedDetails) Validate() error {
	for _, item := range this.ProjectFeatures {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ProjectFeatures", err)
			}
		}
	}
	return nil
}
func (this *ProjectDetails) Validate() error {
	return nil
}
func (this *ProjectsReply) Validate() error {
	for _, item := range this.Projects {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Projects", err)
			}
		}
	}
	return nil
}
func (this *ProjectFeatureAll) Validate() error {
	return nil
}
func (this *ProjectFeaturesByProjectIdRequest) Validate() error {
	return nil
}
func (this *ProjectFeaturesByProjectIdReply) Validate() error {
	for _, item := range this.Features {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Features", err)
			}
		}
	}
	return nil
}
